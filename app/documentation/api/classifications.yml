components:
  schemas:
    Term:
      type: object
      required:
        - id
        - self
      properties:
        id:
          type: string
          example: 65ffb4e4ca21b3e99f821003
        self:
          type: string
          format: uri
          example: /api/terms/65ffb4e4ca21b3e99f821003
        label:
          type: string
          example: Sample term
        slug:
          type: string
          example: sample-term
        type:
          type: string
          example: term
    TaxonomyTerm:
      allOf:
        - $ref: "#/components/schemas/Term"
        - type: object
          properties:
            parents:
              type: array
              items:
                $ref: "#/components/schemas/TaxonomyTerm"
            children:
              type: array
              items:
                $ref: "#/components/schemas/TaxonomyTerm"
            level:
              type: integer
              example: 1

  parameters:
    ID:
      name: id
      in: path
      required: true
      schema:
        type: string
      example: 65ffb4e4ca21b3e99f821003

  requestBodies:
    Term:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - label
                  - type
                properties:
                  label:
                    type: string
                    example: Sample term
                  type:
                    type: string
                    example: term
    TaxonomyTerm:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/requestBodies/Term"
              - type: object
                properties:
                  parent:
                    type: string
                    format: uri
                    example: /api/terms/65ffb4e4ca21b3e99f821003

  responses:
    Term:
      description: Term entity.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Term"
          
    TermFound:
      description: Term entity found.
      $ref: "#/components/responses/Term"

    TermCreated:
      description: Term entity created.
      $ref: "#/components/responses/Term"

    TermUpdated:
      description: Term entity created.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Term"
              - type: object
                properties:
                  previous:
                    $ref: "#/components/schemas/Term"

    TermQueryResult:
      description: Term entities found.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "./openapi.yml#/components/schemas/QueryResult"
              - type: object
                properties:
                  entities:
                    type: array
                    items:
                      anyOf:
                        - $ref: "#/components/schemas/Term"
                        - $ref: "#/components/schemas/TaxonomyTerm"
          example:
            total: 9
            page: 3
            pages: 5
            pageSize: 2
            entities:
              - id: 65ffb4e4ca21b3e99f821003
                self: /api/terms/65ffb4e4ca21b3e99f821003
                label: Sample term 4
                slug: sample-term-4
              - id: 65ffb552feed9350b3ea266a
                self: /api/terms/65ffb552feed9350b3ea266a
                label: Taxonomy term 2
                slug: taxonomy-term-2
                parents:
                  self: /api/terms/taxonomy-term-2/parents
                children:
                  self: /api/terms/sample-term-5/children
            self: /api/terms?page=3
            nav:
              first: /api/terms?page=1
              previous: /api/terms?page=2
              next: /api/terms?page=4
              last: /api/terms?page=5