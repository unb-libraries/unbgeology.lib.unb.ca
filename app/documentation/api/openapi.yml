openapi: 3.0.2
info:
  title: UNB Geology API
  description: The UNB Geology API provides access to specimen metadata curated by the UNB Earth Science Centre.
  version: '0.1'

servers:
  - url: http://local-unbgeology.lib.unb.ca:3118/

paths:
  /api/terms:
    get:
      tags:
        - Term
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
        - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/Select"
        - $ref: "#/components/parameters/Filter"
        - $ref: "#/components/parameters/Search"
      responses:
        200:
          $ref: "./classifications.yml#/components/responses/TermQueryResult"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/ServerError"
    post:
      tags:
        - Term
      security:
        - Session: []
      requestBody:
        $ref: "./classifications.yml#/components/requestBodies/Term"
      responses:
        201:
          $ref: "./classifications.yml#/components/responses/TermCreated"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"
    patch:
      tags:
        - Term
      security:
        - Session: []
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
        - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/Select"
        - $ref: "#/components/parameters/Filter"
        - $ref: "#/components/parameters/Search"
      requestBody:
        $ref: "./classifications.yml#/components/requestBodies/Term"
      responses:
        201:
          $ref: "./classifications.yml#/components/responses/TermUpdated"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"
    delete:
      tags:
        - Term
      security:
        - Session: []
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
        - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/Select"
        - $ref: "#/components/parameters/Filter"
        - $ref: "#/components/parameters/Search"
      responses:
        204:
          $ref: "#/components/responses/Deleted"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

  /api/terms/{id}:
    get:
      tags:
        - Term
      operationId: classification.canonical
      parameters:
        - $ref: "./classifications.yml#/components/parameters/ID"
      responses:
        200:
          $ref: "./classifications.yml#/components/responses/TermFound"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"

    patch:
      tags:
        - Term
      parameters:
        - $ref: "./classifications.yml#/components/parameters/ID"
      security:
        - Session: []
      
      responses:
        200:
          $ref: "./classifications.yml#/components/responses/TermUpdated"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        500:
          $ref: "#/components/responses/ServerError"

    delete:
      tags:
        - Term
      parameters:
        - $ref: "./classifications.yml#/components/parameters/ID"
      security:
        - Session: []
      
      responses:
        204:
          $ref: "#/components/responses/Deleted"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/ServerError"


  /specimens:
    get:
      tags:
        - Specimen
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
      responses:
        200:
          $ref: "./specimens.yml#/components/responses/SpecimenQueryResult"
        204:
          $ref: "#/components/responses/Deleted"
        406:
          $ref: "#/components/responses/NotAccepted"
        default:
          $ref: "#/components/responses/ServerError"

    post:
      tags:
        - Specimen
      security:
        - Session: []
      requestBody:
        required: true
        $ref: "./specimens.yml#/components/requestBodies/Specimen"
      responses:
        201:
          $ref: "./specimens.yml#/components/responses/SpecimenCreated"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/ServerError"

  /specimens/{id}:
    get:
      tags:
        - Specimen
      parameters:
        - $ref: "./specimens.yml#/components/parameters/ID"
      responses:
        200:
          $ref: "./specimens.yml#/components/responses/SpecimenFound"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/ServerError"
    
    put:
      tags:
        - Specimen
      parameters:
        - $ref: "./specimens.yml#/components/parameters/ID"
      requestBody:
        required: false
        $ref: "./specimens.yml#/components/requestBodies/SpecimenUpdate"
      security:
        - Session: []
      
      responses:
        200:
          $ref: "./specimens.yml#/components/responses/SpecimenUpdated"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/ServerError"

    delete:
      tags:
        - Specimen
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: unb-001
      security:
        - Session: []
      
      responses:
        204:
          $ref: "#/components/responses/Deleted"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        401:
          $ref: "#/components/responses/Unauthenticated"
        403:
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/ServerError"
                  
components:
  schemas:
    QueryResult:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
        page:
          type: integer
          minimum: 1
        pageSize:
          type: integer
          minimum: 1
          example: 25
        nav:
          type: object
          properties:
            first:
              type: string
              format: uri
            previous:
              type: string
              format: uri
            next:
              type: string
              format: uri
            last:
              type: string
              format: uri
        entities:
          type: array
          items: {}
    Error:
      type: object
      properties:
        errorDetails:
          type: string

  parameters:
    Page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
      required: false
    PageSize:
      name: pageSize
      in: query
      schema:
        type: integer
        minimum: 1
        default: 25
      required: false
    Sort:
      name: sort
      in: query
      schema:
        type: string
      required: false
    Select:
      name: select
      in: query
      schema:
        type: string
      required: false
    Filter:
      name: filter
      in: query
      schema:
        type: string
      required: false
    Search:
      name: search
      in: query
      schema:
        type: string
      required: false

  responses:
    Error:
      description: Error response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Deleted:
      description: Entity deleted.
    BadRequest:
      description: Bad request.
      $ref: "#/components/responses/Error"
    Unauthenticated:
      description: Authentication required.
      $ref: "#/components/responses/Error"
    Unauthorized:
      description: Permission required.
      $ref: "#/components/responses/Error"
    NotFound:
      description: Entity not found.
      $ref: "#/components/responses/Error"
    NotAccepted:
      description: Format not supported.
      $ref: "#/components/responses/Error"
    ServerError:
      description: Server error.

  securitySchemes:
    Session:
      type: apiKey
      in: cookie
      name: sessionId